# Every proxy_pass to upstream servers can be
# replaced with direct proxy_pass to the corresponding server. 
# (e.g: "proxy_pass http://admin_ethopia.com" instead of "proxy_pass http://admin_ethiopia_server;";)
# But, using upstream makes it scalable. More servers can be added to the 
# corresponding upstream and proxy_pass can be made to this new server, automatically by nginx 
# with out the need to explicitly call proxy_pass to every new server added. 
# This also helps in load ballancing.


# servers pool home site
upstream home_server {
	server localhost:300;
}

# server pool for admin site
upstream admin_ethiopia_server  {
	server localhost:400;
}

# server pool for flask site
upstream flask_ethiopia_server  {
	server localhost:500;
}

# home site server
server {
	listen localhost:300;
	server_name ethiopia.com; # local (within nginx) reference name to this server

	root /home/kirub/iEx/nginx_gunicorn/ethiopia.com/public;
	
	location / {
		index index.html;
	}

	location /home {
		try_files $uri /; # looks for file named home and since there is no such file, it redirects to location /
	}

	location /admin {
		proxy_pass http://admin_ethiopia_server;
	}

	location /flask {
		proxy_pass http://flask_ethiopia_server;
	}
}

# admin site server
server {
	listen localhost:400;
	server_name admin_ethopia.com; # local (within nginx) reference name to this server

	root /home/kirub/iEx/nginx_gunicorn/ethiopia.com/logs;

	location / {
		index index.html;
	}

	location /admin {
		try_files $uri /; # looks for file named admin and since there is no such file, it redirects to location /
	}

	location /home/ {
		proxy_pass http://home_server;
	}

	location /access.log {
	}

	location /error.log {
	}

	location /flask_access.log {
	}

	location /flask_error.log {
	}

	location /flask {
		proxy_pass http://flask_ethiopia_server;
	}
}

# flask site server
server {
	listen localhost:500;
	server_name flask_ethopia.com; # local (within nginx) reference name to this server

	root /home/kirub/iEx/nginx_gunicorn/ethiopia.com/logs;

	location / {
		proxy_pass http://localhost:8000; # forward to gunicorn
	}

	location /flask {
	# looks for file named flask and since there is no such file, it redirects to location /
		try_files $uri /; 

	
	}

	location /home/ {
		proxy_pass http://home_server;
	}


	location /admin {
		proxy_pass http://admin_ethiopia_server;
	}
}
